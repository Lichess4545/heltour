from django.dispatch.dispatcher import Signal

# Signals that run tasks
# providing_args=['round_id', 'overwrite']
do_generate_pairings = Signal()
# providing_args=['round_id']
do_round_transition = Signal()
# providing_args=['round_id', 'eta']
do_schedule_publish = Signal()
# providing_args=['round_id']
do_pairings_published = Signal()
# providing_args=['reg_id']
do_validate_registration = Signal()
# providing_args=['team_ids']
do_create_team_channel = Signal()

# Signals that send notifications
# providing_args=['instance']
pairing_forfeit_changed = Signal()
# providing_args=['instance', 'old_value', 'new_value']
player_account_status_changed = Signal()
# providing_args=['round_']
notify_mods_unscheduled = Signal()
# providing_args=['round_']
notify_mods_no_result = Signal()
# providing_args=['round_']
notify_mods_pending_regs = Signal()
# providing_args=['round_']
notify_mods_pairings_published = Signal()
# providing_args=['round_']
notify_mods_round_start_done = Signal()
# providing_args=['round_']
pairings_generated = Signal()
# providing_args=['season', 'warnings']
no_round_transition = Signal()
# providing_args=['season', 'msg_list']
starting_round_transition = Signal()
# providing_args=['season', 'team', 'board_number', 'round_']
alternate_search_started = Signal()
# providing_args=['season', 'team', 'board_number', 'round_']
alternate_search_reminder = Signal()
# providing_args=['season', 'team', 'board_number', 'round_', 'number_contacted']
alternate_search_all_contacted = Signal()
# providing_args=['season', 'team', 'board_number', 'round_']
alternate_search_failed = Signal()
# providing_args=['season', 'alt_assignment']
alternate_assigned = Signal()
# providing_args=['alternate', 'round_', 'response_time', 'accept_url', 'decline_url']
alternate_needed = Signal()
# providing_args=['alternate', 'response_time']
alternate_spots_filled = Signal()
# providing_args=['round_']
notify_players_round_start = Signal()
# providing_args=['round_', 'pairing']
notify_players_late_pairing = Signal()
# providing_args=['round_']
notify_players_unscheduled = Signal()
# providing_args=['pairing']
notify_players_game_time = Signal()
# providing_args=['player', 'pairing', 'offset']
before_game_time = Signal()
# providing_args=['pairing', 'warning']
game_warning = Signal()
# providing_args=['league', 'comment']
league_comment = Signal()
# providing_args=['round_', 'player', 'punishment', 'allow_continue', 'pairing']
notify_unresponsive = Signal()
# providing_args=['round_', 'player', 'opponent', 'pairing']
notify_opponent_unresponsive = Signal()
# providing_args=['round_', 'warnings', 'yellows', 'reds']
notify_mods_unresponsive = Signal()
# providing_args=['round_', 'player', 'opponent']
notify_noshow = Signal()
# providing_args=['round_', 'player', 'punishment', 'allow_continue']
notify_noshow_claim = Signal()
# providing_args=['round_', 'player']
notify_scheduling_draw_claim = Signal()
# providing_args=['lichess_username', 'slack_user_id']
slack_account_linked = Signal()
# providing_args=['round_id', 'eta']
publish_scheduled = Signal()

# Automod signals
# providing_args=['round_']
automod_unresponsive = Signal()
# providing_args=['pairing']
automod_noshow = Signal()
# providing_args=['instance']
mod_request_created = Signal()
# providing_args=['instance']
mod_request_approved = Signal()
# providing_args=['instance']
mod_request_rejected = Signal()
