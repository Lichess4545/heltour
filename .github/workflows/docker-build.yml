name: Docker Build

on:
  push:
    branches: ["**"]
  pull_request:
    branches: ["**"]

env:
  REGISTRY: ghcr.io
  IMAGE_PREFIX: ${{ github.repository_owner }}

jobs:
  docker:
    name: Build Docker Images
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Generate tag
        id: tag
        run: |
          if [ "${{ github.ref }}" == "refs/heads/master" ]; then
            echo "TAG=latest" >> $GITHUB_OUTPUT
          elif [ "${{ github.event_name }}" == "pull_request" ]; then
            echo "TAG=pr-${{ github.event.pull_request.number }}" >> $GITHUB_OUTPUT
          else
            # Use branch name as tag, sanitized for Docker
            TAG=$(echo "${{ github.ref }}" | sed -e 's/refs\/heads\///' -e 's/[^a-zA-Z0-9._-]/-/g')
            echo "TAG=${TAG}" >> $GITHUB_OUTPUT
          fi

      - name: Log in to GitHub Container Registry
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # For non-master branches: only run verification
      - name: Build and verify
        if: github.ref != 'refs/heads/master'
        run: |
          TAG="${{ steps.tag.outputs.TAG }}" \
          REGISTRY="ghcr.io/${{ env.IMAGE_PREFIX }}" \
          docker buildx bake -f docker/docker-bake.hcl verify

      # For master branch: build all images including verify, then push production images
      - name: Build and push all images
        if: github.event_name == 'push' && github.ref == 'refs/heads/master'
        run: |
          TAG="${{ steps.tag.outputs.TAG }}" \
          REGISTRY="ghcr.io/${{ env.IMAGE_PREFIX }}" \
          docker buildx bake -f docker/docker-bake.hcl --push default
